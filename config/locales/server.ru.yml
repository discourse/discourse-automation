# WARNING: Never edit this file.
# It will be overwritten when translations are pulled from Crowdin.
#
# To work with us on translations, join this project:
# https://translate.discourse.org/

ru:
  site_settings:
    discourse_automation_enabled: "Включить плагин «discourse-automation»"
  discourse_automation:
    models:
      fields:
        required_field: 'Поле `%{name}` должно быть заполнено: `%{target}:%{target_name}`.'
        invalid_field: 'Компонент поля `%{component}` не подходит: `%{target}:%{target_name}`.'
        invalid_metadata: Данные для поля `%{field}` недействительны или компонент `%{component}` неизвестен.
    triggerables:
      user_badge_granted:
        title: Выдана награда пользователя
        doc: Запускает автоматизацию, когда пользователю выдаётся награда.
      stalled_topic:
        title: Неактивная тема
        doc: 'Запускает автоматизацию, если тема не получает новые ответы от автора в течение указанного времени. Рекомендуется ограничить этот триггер по тегу или категории: количество затронутых тем может быть очень большим. В качестве меры предосторожности максимальное количество затрагиваемых тем — 250.'
      api_call:
        title: Вызов API
        description: Выполнение POST-запроса для запуска автоматизации
        doc: POST-запрос должен быть сделан на `/automations/:id/trigger.json` с глобальным ключом API.
      recurring:
        title: Повторение
      point_in_time:
        title: Момент времени
        description: Автоматизация будет запущена по достижении указанной даты
      user_added_to_group:
        title: Пользователь добавлен в группу
        description: Автоматизация будет запущена, когда в указанную группу будет добавлен пользователь
      user_removed_from_group:
        title: Пользователь удален из группы
        description: Автоматизация будет запущена, когда из указанной группы будет удален пользователь
      user_promoted:
        title: Пользователь повышен
        description: При повышении уровня доверия пользователя
        transition_placeholder: "с %{from_level_name} до %{to_level_name}"
      stalled_wiki:
        title: Неактивная вики-запись
        description: Автоматизация будет запущена, если вики-запись не редактировалась в течение указанного периода
      post_created_edited:
        title: Запись создана (отредактирована)
        description: Автоматизация будет запущена, когда будет отредактирована или создана соответствующая требованиям запись
      pm_created:
        title: Создано личное сообщение
        description: Автоматизация будет запущена, когда будет создано соответствующее требованиям ЛС
      topic:
        title: Тема
        description: Связанный скрипт будет использоваться только в указанной теме (например, это удобно для скриптов, выполняющих проверку)
      after_post_cook:
        title: После финализации записи
        description: Автоматизация будет запущена, когда будет финализирован контент записи
    scriptables:
      post:
        title: Создать запись
        description: Создать запись на указанную тему
      flag_post_on_words:
        title: Пожаловаться на запись по словам
        description: Пожаловаться на запись, если она содержит указанные слова
        flag_message: "Запись содержит запрещенные слова: %{words}"
        doc: Запись, содержащая сразу все указанные слова, получит жалобу и будет скрыта. Разделенные запятыми слова считаются составным условием (должно присутствовать каждое слово).
      zapier_webhook:
        title: Вебхук Zapier
        description: Вызывает зап с контекстом триггера в качестве тела сообщения
      auto_responder:
        title: Автоответчик
        description: Публикует ответ, если запись содержит указанные ключевые слова
      pin_topic:
        title: Закрепить тему
        description: Закрепляет указанную тему в указанную дату
      banner_topic:
        title: Сделать баннером
        description: Преобразовать тему в баннер
      gift_exchange:
        title: Обмен подарками
        description: Позволяет анонимно связывать пользователей группы для отправки друг другу подарков.
        doc: Для обмена подарками нужна группа как минимум из трех пользователей. В указанную дату каждый пользователь группы будет связан с одним дарителем и одним дарящим.
      send_pms:
        title: Отправить ЛС
        description: Позволяет отправлять личные сообщения (можно с задержкой).
        doc: Позволяет отправлять пользователю несколько личных сообщений. Каждое ЛС может быть отправлено с задержкой.
      suspend_user_by_email:
        title: Заморозить пользователя по адресу эл. почты
      user_global_notice:
        title: Глобальное уведомление пользователей
        description: Позволяет отобразить пользователю глобальное уведомление
      suspend_user_by_email_with_api_call:
        doc: При запуске `suspend_user_by_email` с помощью вызова API конечная точка ожидает, что в передаваемых параметрах будет присутствовать правильный адрес `email`. Причины `reasons` и время `suspend_until` (в формате ISO 8601) также могут быть использованы для переопределения значений по умолчанию.
      user_global_notice_with_stalled_topic:
        doc: При запуске по неактивной теме владелец темы получит глобальное уведомление.
      send_pms_with_api_call:
        doc: При использовании скрипта `send pms` с триггером `api call` параметр `usernames` запроса будет использоваться для заполнения списка получателей.
      topic_required_words:
        title: Обязательные слова для темы
        description: Список слов, которые должны быть в теме. В каждой записи должно использоваться как минимум одно слово.
        doc: 'Для обязательных слов нужно указать тему. Когда запись редактируется или создается, она проверяется на соответствие списку слов: должно присутствовать хотя бы одно из них.'
        errors:
          must_include_word: "Запись должна содержать как минимум одно из этих слов: %{words}"
      close_topic:
        title: Закрыть тему
        description: Закрывает тему; можно указать сообщение о закрытии
      append_last_edited_by:
        title: Добавить данные о последней правке
        description: Внизу финализированного контента добавляет сведения о том, кем запись последний раз редактировалась.
        text: "Последняя правка: @%{username} %{date_time}"
      append_last_checked_by:
        title: Добавить данные о последней проверке
        description: Внизу финализированного контента добавляет сведения о том, кем запись последний раз проверялась.
        text: "Последняя проверка: @%{username} %{date_time}"
        summary: Проверить документ
        details: "Выполнить проверку документа: "
        button_text: Готово
      add_user_to_group_through_custom_field:
        title: "Добавить пользователя в группу через настраиваемое поле пользователя"
